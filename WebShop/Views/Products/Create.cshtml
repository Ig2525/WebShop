@using AutoMapper
@model WebShop.Models.ProductCreateViewModel
@inject IMapper _mapper

@{
    ViewData["Title"] = "Create";
    var categories = Model.Categories.Select(x => _mapper.Map<SelectListItem>(x)).ToList();
}

<h1>Додати продукт</h1>

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <div id="myImages">
                </div>
                <label for="files" class="control-label"
                       style="border:dotted; height: 100px">Оберіть фото</label>
                <input type="file"
                       id="files"
                       style="display:none" multiple
                       accept="image/jpeg,image/png,image/jpg"
                       class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                @Html.DropDownListFor(x=>x.CategoryId, categories, new { @class= "form-control"})
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<!-- Modal -->
<div class="modal" id="cropperModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Редагування фото</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-9">
                        <div>
                            <img src="/images/select.png"
                                 id="imgCropper"
                                 width="100%"
                                 alt="Фото для обрізки" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div id="imgPrev"
                             class="preview">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnLeft" class="btn btn-success">Left</button>
                <button type="button" id="btnRight" class="btn btn-success">Right</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрити</button>
                <button type="button" id="btnAdd" class="btn btn-primary">Обрізати</button>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/cropperjs/cropper.min.js"></script>

@section Scripts {
    <script>
        window.onload = function () {

            var blob;
            var imgCropper = document.getElementById("imgCropper");
            var imgPrev = document.getElementById("imgPrev");
            var cropper = new Cropper(imgCropper, {
                aspectRatio: 1 / 1,
                //viewMode: 1,
                preview: imgPrev
            });

            const myImages = document.getElementById("myImages");
            const files = document.getElementById("files");
            files.onchange = function (e) {
                const list = e.target.files;
                if (list && list.length) {
                    for (let i = 0; i < list.length; i++) {
                        const file = list[i];

                        var url = URL.createObjectURL(file);
                        //console.log("image", url);

            // Відображення модального вікна :
                        var myModal = bootstrap.Modal.getOrCreateInstance(document.getElementById('cropperModal'));
                        myModal.show();
                        cropper.replace(url);

                        //image.value = "";
                        //    const url = URL.createObjectURL(file);
                        //    var data = `
                        //    <img src = ${url} height="100" />
                        //    `;
                        //    console.log(data);
                        //    myImages.innerHTML+=data;
                    }
                }
                e.target.value = "";
                //console.log("Select files", list);
            }

            //Кнопка додавання фото
            let btnAdd = document.getElementById("btnAdd");
            btnAdd.onclick = function () {
                cropper.getCroppedCanvas().toBlob(async (blob) => {
                    var formData = new FormData();
                    formData.append("file", blob);
                    const resp = await axios.post("/Products/Upload", formData,
                        {
                            headers: {
                                "Content-Type": "multipart/form-data"
                            }
                        });
                    console.log("upalod image resp", resp.data);
                    const pimage = resp.data;
                    const url = "/images/" + pimage.name;
                    var data = `
                            <img src = ${url} height="100" />
                            <input type="hidden" name="images"
                                         value=${pimage.id} />
                                                    `;
                    console.log(data);
                    myImages.innerHTML += data;
                    var myModal = bootstrap.Modal.getOrCreateInstance(document.getElementById('cropperModal'));
                    myModal.hide();
                });

            }
            //Кнопка повороту в ліво
            let btnLeft = document.getElementById("btnLeft");
            btnLeft.onclick = function () {
                cropper.rotate(-90);
            }
            //Кнопка повороту в право
            let btnRight = document.getElementById("btnRight");
            btnRight.onclick = function () {
                cropper.rotate(90);
            }

        }
    </script>
 }
